version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: restaurant-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres.2025
      POSTGRES_DB: restaurantdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - restaurant-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Приложение для бронирования столиков
  restaurant-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restaurant-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=restaurantdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres.2025
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USERNAME=${MAIL_USERNAME:-your-email@gmail.com}
      - MAIL_PASSWORD=${MAIL_PASSWORD:-your-app-password}
      - MAIL_IMAP_HOST=imap.gmail.com
      - MAIL_IMAP_PORT=993
    ports:
      - "8080:8080"
    networks:
      - restaurant-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  restaurant-network:
    driver: bridge

volumes:
  postgres-data: